/*
Deployment script for Emcor

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Emcor"
:setvar DefaultFilePrefix "Emcor"
:setvar DefaultDataPath "C:\Users\Usuario\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\AntaresInstance"
:setvar DefaultLogPath "C:\Users\Usuario\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\AntaresInstance"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 96f0f2dc-2f60-4ffd-a491-1a8750900e5c is skipped, element [dbo].[TeacherSubject].[teacher_id] (SqlSimpleColumn) will not be renamed to Teacher_id';


GO
PRINT N'Rename refactoring operation with key d27f9111-239c-4e85-ae85-c0f222361a38 is skipped, element [dbo].[TeacherSubject].[room] (SqlSimpleColumn) will not be renamed to Room';


GO
PRINT N'Rename refactoring operation with key 58e9c8a5-a72f-4f55-bc58-cf2dd7b84479 is skipped, element [dbo].[TeacherSubject].[semester] (SqlSimpleColumn) will not be renamed to Semester';


GO
PRINT N'Rename refactoring operation with key afaa27ab-deca-44fe-b5d2-f277902b9819 is skipped, element [dbo].[TeacherSubject].[schedule] (SqlSimpleColumn) will not be renamed to Schedule';


GO
PRINT N'Rename refactoring operation with key 41a1012b-c0ad-420b-9d07-dcc120ac8198 is skipped, element [dbo].[TeacherSubject].[subject_id] (SqlSimpleColumn) will not be renamed to Subject_id';


GO
PRINT N'Creating [dbo].[Group]...';


GO
CREATE TABLE [dbo].[Group] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Teacher_id] INT           NULL,
    [Room]       NVARCHAR (30) NULL,
    [Semester]   NVARCHAR (50) NULL,
    [Schedule]   NVARCHAR (10) NULL,
    [Subject_id] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[GroupDetail]...';


GO
CREATE TABLE [dbo].[GroupDetail] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [Group_id]   INT NULL,
    [Student_id] INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (100) NULL,
    [Career]         NVARCHAR (100) NULL,
    [Control_number] NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Subject]...';


GO
CREATE TABLE [dbo].[Subject] (
    [Id]   INT            IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Teacher]...';


GO
CREATE TABLE [dbo].[Teacher] (
    [Id]   INT            IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Group_Teacher]...';


GO
ALTER TABLE [dbo].[Group] WITH NOCHECK
    ADD CONSTRAINT [FK_Group_Teacher] FOREIGN KEY ([Teacher_id]) REFERENCES [dbo].[Teacher] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Group_Subject]...';


GO
ALTER TABLE [dbo].[Group] WITH NOCHECK
    ADD CONSTRAINT [FK_Group_Subject] FOREIGN KEY ([Subject_id]) REFERENCES [dbo].[Subject] ([Id]);


GO
PRINT N'Creating [dbo].[FK_GroupDetail_Group]...';


GO
ALTER TABLE [dbo].[GroupDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_GroupDetail_Group] FOREIGN KEY ([Group_id]) REFERENCES [dbo].[Group] ([Id]);


GO
PRINT N'Creating [dbo].[FK_GroupDetail_Student]...';


GO
ALTER TABLE [dbo].[GroupDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_GroupDetail_Student] FOREIGN KEY ([Student_id]) REFERENCES [dbo].[Student] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '96f0f2dc-2f60-4ffd-a491-1a8750900e5c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('96f0f2dc-2f60-4ffd-a491-1a8750900e5c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd27f9111-239c-4e85-ae85-c0f222361a38')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d27f9111-239c-4e85-ae85-c0f222361a38')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '58e9c8a5-a72f-4f55-bc58-cf2dd7b84479')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('58e9c8a5-a72f-4f55-bc58-cf2dd7b84479')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'afaa27ab-deca-44fe-b5d2-f277902b9819')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('afaa27ab-deca-44fe-b5d2-f277902b9819')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '41a1012b-c0ad-420b-9d07-dcc120ac8198')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('41a1012b-c0ad-420b-9d07-dcc120ac8198')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Group] WITH CHECK CHECK CONSTRAINT [FK_Group_Teacher];

ALTER TABLE [dbo].[Group] WITH CHECK CHECK CONSTRAINT [FK_Group_Subject];

ALTER TABLE [dbo].[GroupDetail] WITH CHECK CHECK CONSTRAINT [FK_GroupDetail_Group];

ALTER TABLE [dbo].[GroupDetail] WITH CHECK CHECK CONSTRAINT [FK_GroupDetail_Student];


GO
PRINT N'Update complete.';


GO
